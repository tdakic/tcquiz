{"version":3,"file":"waitforstudents.min.js","sources":["../src/waitforstudents.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Wait for the students to connect to tcquiz session.\n * Redisplay the number of connected students every POLLING_INTERVAL miliiseconds\n *\n * @module     quizaccess_tcquiz\n * @copyright  2024 Capilano University\n * @author     Tamara Dakic <tdakic@capilanou.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst Selectors = {\n    actions: {\n        nextButton: '[data-action=\"quizaccess_tcquiz/waitforstudents-next_button\"]',\n        },\n        regions: {\n            numStudentsSpan: '[data-region=\"quizaccess_tcquiz/numberstudents_span\"]',\n        },\n};\n\nconst registerEventListeners = (sessionid, quizid, cmid, attemptid, POLLING_INTERVAL) => {\n\n  var updateNumStudentsEvent = setInterval(async() => {\n    await updateNumberOfStudents(sessionid, quizid, cmid, attemptid);\n  }, POLLING_INTERVAL);\n\n  /* Teacher clicks the next button when they are ready to display the first question */\n  const nextQuestionAction = document.querySelector(Selectors.actions.nextButton);\n  nextQuestionAction.addEventListener('click', async(e) => {\n          e.preventDefault();\n          clearInterval(updateNumStudentsEvent);\n          updateNumStudentsEvent = null;\n\n          var result = await fetch(M.cfg.wwwroot + '/mod/quiz/accessrule/tcquiz/quizdatateacher.php?requesttype=getquestion&quizid='\n            + quizid + '&cmid=' + cmid + '&attempt=' + attemptid\n            + '&sessionid=' + sessionid + '&rejoin=0&sesskey=' + M.cfg.sesskey, {method: 'POST'});\n\n          var responseXMLText = await result.text();\n\n          await goToNextUrl(responseXMLText);\n\n    }, {once: true});\n\n};\n\n\nexport const init = (sessionid, quizid, cmid, attemptid, POLLING_INTERVAL) => {\n  registerEventListeners(sessionid, quizid, cmid, attemptid, POLLING_INTERVAL);\n};\n\n\n/**\n * Update the number of students who connected to tcquiz\n * @param {sessionid} sessionid The id of the current session.\n * @param {quizid} quizid The quizid of the current quiz.\n * @param {cmid} cmid Course module id of the current quiz.\n * @param {attemptid} attemptid The attemptid of the teacher's preview. Needed for displaying the first question.\n */\nasync function updateNumberOfStudents(sessionid, quizid, cmid, attemptid) {\n\n  var result = await fetch(M.cfg.wwwroot + '/mod/quiz/accessrule/tcquiz/quizdatateacher.php?requesttype=getnumberstudents&quizid='\n    + quizid + '&sessionid=' + sessionid + '&cmid=' + cmid + '&attempt=' + attemptid\n    + '&currentquestion=0&sesskey=' + M.cfg.sesskey, {method: 'POST'});\n\n  var responseXMLText = await result.text();\n\n  await updateNumberOfStudentsHTML(responseXMLText);\n\n}\n\n/**\n * Helper function to update the html with fetched number of connected students.\n * @param {string} responseXMLText The XML with the number of connected students returned from the server\n */\nfunction updateNumberOfStudentsHTML(responseXMLText) {\n\n  var parser = new DOMParser();\n  var responseXML = parser.parseFromString(responseXMLText, 'text/html');\n\n  var quizresponse = responseXML.getElementsByTagName('tcquiz').item(0);\n\n  var numberOfStudents = quizresponse.getElementsByTagName('numberstudents').item(0).textContent;\n\n  document.querySelector(Selectors.regions.numStudentsSpan).innerHTML = numberOfStudents;\n}\n\n/**\n * Helper function to parse a response from the server and go to the specified url.\n * The url should either be of the next quiz page of the final results.\n * The only responses should have url field\n * @param {string} responseXMLText The XML returned by quizdatateacher.php\n */\nfunction goToNextUrl(responseXMLText) {\n\n  var parser = new DOMParser();\n  var responseXML = parser.parseFromString(responseXMLText, 'text/html');\n\n  var quizresponse = responseXML.getElementsByTagName('tcquiz').item(0);\n\n  var nextUrl = quizresponse.getElementsByTagName('url').item(0).textContent;\n  window.location.replace(nextUrl);\n\n}\n"],"names":["Selectors","actions","nextButton","regions","numStudentsSpan","registerEventListeners","sessionid","quizid","cmid","attemptid","POLLING_INTERVAL","updateNumStudentsEvent","setInterval","async","result","fetch","M","cfg","wwwroot","sesskey","method","responseXMLText","text","responseXML","DOMParser","parseFromString","numberOfStudents","getElementsByTagName","item","textContent","document","querySelector","innerHTML","updateNumberOfStudentsHTML","updateNumberOfStudents","addEventListener","e","preventDefault","clearInterval","nextUrl","window","location","replace","goToNextUrl","once","_exports","init"],"mappings":";;;;;;;;;;AAyBA,MAAMA,UAAY,CACdC,QAAS,CACLC,WAAY,iEAEZC,QAAS,CACLC,gBAAiB,0DAIvBC,uBAAyBA,CAACC,UAAWC,OAAQC,KAAMC,UAAWC,oBAElE,IAAIC,uBAAyBC,aAAYC,gBAoC3CA,eAAsCP,UAAWC,OAAQC,KAAMC,WAE7D,IAAIK,aAAeC,MAAMC,EAAEC,IAAIC,QAAU,wFACrCX,OAAS,cAAgBD,UAAY,SAAWE,KAAO,YAAcC,UACrE,8BAAgCO,EAAEC,IAAIE,QAAS,CAACC,OAAQ,SAExDC,sBAAwBP,OAAOQ,aAUrC,SAAoCD,iBAElC,IACIE,aADS,IAAIC,WACQC,gBAAgBJ,gBAAiB,aAItDK,iBAFeH,YAAYI,qBAAqB,UAAUC,KAAK,GAE/BD,qBAAqB,kBAAkBC,KAAK,GAAGC,YAEnFC,SAASC,cAAc/B,UAAUG,QAAQC,iBAAiB4B,UAAYN,iBAjBhEO,CAA2BZ,iBA3CzBa,CAAuB5B,UAAWC,OAAQC,KAAMC,UAAU,GAC/DC,kBAGwBoB,SAASC,cAAc/B,UAAUC,QAAQC,YACjDiC,iBAAiB,SAAStB,UACrCuB,EAAEC,iBACFC,cAAc3B,wBACdA,uBAAyB,KAEzB,IAAIG,aAAeC,MAAMC,EAAEC,IAAIC,QAAU,kFACrCX,OAAS,SAAWC,KAAO,YAAcC,UACzC,cAAgBH,UAAY,qBAAuBU,EAAEC,IAAIE,QAAS,CAACC,OAAQ,SAE3EC,sBAAwBP,OAAOQ,aAuD7C,SAAqBD,iBAEnB,IACIE,aADS,IAAIC,WACQC,gBAAgBJ,gBAAiB,aAItDkB,QAFehB,YAAYI,qBAAqB,UAAUC,KAAK,GAExCD,qBAAqB,OAAOC,KAAK,GAAGC,YAC/DW,OAAOC,SAASC,QAAQH,SA7DVI,CAAYtB,gBAAgB,GAErC,CAACuB,MAAM,GAAM,EAOlBC,SAAAC,KAFkBA,CAACxC,UAAWC,OAAQC,KAAMC,UAAWC,oBACvDL,uBAAuBC,UAAWC,OAAQC,KAAMC,UAAWC,iBAAiB,CAuD7E"}