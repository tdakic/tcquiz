{"version":3,"file":"starttcq.min.js","sources":["../src/starttcq.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Allows the teacher to start tcquiz\n *\n * The actual form for typing in the new joincode and starting a new quiz is in\n * /mod/quiz/accessrule/tcquiz/classes/form/tcq_start_form.php\n * and is validated by the validation method\n *\n * @module     quizaccess_tcquiz\n * @copyright  2024 Capilano University\n * @author     Tamara Dakic <tdakic@capilanou.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// import $ from 'jquery';\nimport Notification from 'core/notification';\nimport {get_string as getString} from 'core/str';\n\nconst Selectors = {\n    actions: {\n        startTCQButton: '[data-action=\"quizaccess_tcquiz/starttcq-startnew_button\"]',\n        endButton: '[data-action=\"quizaccess_tcquiz/starttcq-end_button\"]',\n        rejoinButton: '[data-action=\"quizaccess_tcquiz/starttcq-rejoin_button\"]',\n    },\n\n};\n\nconst registerEventListeners = (sessionid, joincode, timestamp, currentpage, status, attemptid, existingsession, quizid, cmid) => {\n\n    // Handle the teacher clicking on the End button to end the session (if there is one).\n    const endTCQAction = document.querySelector(Selectors.actions.endButton);\n    if (endTCQAction !== null) {\n      endTCQAction.addEventListener('click', async(e) => {\n\n            e.preventDefault();\n\n            var url = M.cfg.wwwroot + \"/mod/quiz/accessrule/tcquiz/end_session.php?id=\" + e.target.name + \"&cmid=\" + cmid;\n\n            // Response.status will be 404 even if the fetched url throws exception.\n            await fetch(url, {method: \"POST\"}).then((response) => {\n                  if (!response.ok) {\n                    Notification.addNotification({\n                        message: getString('errorclosingsession', 'quizaccess_tcquiz'),\n                        type: 'error'\n                    });\n\n                  } else {\n                    location.reload();\n                  }\n                  return null;\n          });\n      }, {once: true});\n    }\n\n    // Handle the teacher clicking on the Rejoin button to rejoin the running session (if there is one).\n    const rejoinTCQAction = document.querySelector(Selectors.actions.rejoinButton);\n    if (endTCQAction !== null) {\n      rejoinTCQAction.addEventListener('click', async(e) => {\n            e.preventDefault();\n            // Constants defined in tcq_constants.json - get them!\n            const response = await fetch(M.cfg.wwwroot + \"/mod/quiz/accessrule/tcquiz/tcq_constants.json\");\n            const tcqConsts = await response.json();\n\n            var url = \"\";\n            if (status == tcqConsts.TCQUIZ_STATUS_READYTOSTART) {\n              url = M.cfg.wwwroot + \"/mod/quiz/accessrule/tcquiz/wait_for_students.php?quizid=\" + quizid + \"&cmid=\" + cmid +\n              \"&attemptid=\" + attemptid + \"&joincode=\" + joincode + \"&sessionid=\" + sessionid;\n              window.location.replace(url);\n\n            } else if (status == tcqConsts.TCQUIZ_STATUS_PREVIEWQUESTION || status == tcqConsts.TCQUIZ_STATUS_SHOWQUESTION) {\n              url = M.cfg.wwwroot + \"/mod/quiz/accessrule/tcquiz/attempt.php?showall=0&quizid=\" + quizid + \"&cmid=\" + cmid +\n              \"&attempt=\" + attemptid + \"&joincode\" + joincode + \"&sessionid=\" + sessionid + \"&page=\" + currentpage;\n              window.location.replace(url);\n\n            } else if (status == tcqConsts.TCQUIZ_STATUS_SHOWRESULTS) {\n              url = M.cfg.wwwroot + \"/mod/quiz/accessrule/tcquiz/review_tcq.php?showall=false&quizid=\" + quizid + \"&cmid=\" +\n              cmid + \"&attempt=\" + attemptid + \"&joincode\" + joincode + \"&sessionid=\" + sessionid + \"&page=\" + currentpage;\n              window.location.replace(url);\n\n            } else if (status == tcqConsts.TCQUIZ_STATUS_FINALRESULTS) {\n              url = M.cfg.wwwroot + \"/mod/quiz/accessrule/tcquiz/report_final_results.php?mode=overview&quizid=\" + quizid +\n              \"&id=\" + cmid + \"&tcqsid=\" + sessionid;\n              window.location.replace(url);\n\n            } else {\n              Notification.addNotification({\n                  message: getString('errorrejoining', 'quizaccess_tcquiz'),\n                  type: 'error'\n              });\n            }\n      }, {once: true});\n    }\n\n\n    // Trying to prevent double clicking here.\n    document.addEventListener('click', (e) => {\n          if (e.target.closest(Selectors.actions.startTCQButton)) {\n            e.preventDefault();\n          }\n    }, {once: true});\n\n};\n\nexport const init = (sessionid, joincode, timestamp, currentpage, status, attemptid, existingsession, quizid, cmid) => {\n\n  registerEventListeners(sessionid, joincode, timestamp, currentpage - 1, status, attemptid, existingsession, quizid, cmid);\n\n};\n"],"names":["obj","_notification","__esModule","default","Selectors","startTCQButton","endButton","rejoinButton","_exports","init","sessionid","joincode","timestamp","currentpage","status","attemptid","existingsession","quizid","cmid","registerEventListeners","endTCQAction","document","querySelector","addEventListener","async","e","preventDefault","url","M","cfg","wwwroot","target","name","fetch","method","then","response","ok","location","reload","Notification","addNotification","message","getString","type","once","rejoinTCQAction","tcqConsts","json","TCQUIZ_STATUS_READYTOSTART","window","replace","TCQUIZ_STATUS_PREVIEWQUESTION","TCQUIZ_STATUS_SHOWQUESTION","TCQUIZ_STATUS_SHOWRESULTS","TCQUIZ_STATUS_FINALRESULTS","closest"],"mappings":"sHA6B6C,IAAAA;;;;;;;;;;;;kFAA7CC,eAA6CD,IAA7CC,gBAA6CD,IAAAE,WAAAF,KAAAG,QAAAH,KAG7C,MAAMI,kBACO,CACLC,eAAgB,6DAChBC,UAAW,wDACXC,aAAc,4DAqFpBC,SAAAC,KAJkBA,CAACC,UAAWC,SAAUC,UAAWC,YAAaC,OAAQC,UAAWC,gBAAiBC,OAAQC,QA5E/EC,EAACT,UAAWC,SAAUC,UAAWC,YAAaC,OAAQC,UAAWC,gBAAiBC,OAAQC,QAGrH,MAAME,aAAeC,SAASC,cAAclB,kBAAkBE,WACzC,OAAjBc,cACFA,aAAaG,iBAAiB,SAASC,UAEjCC,EAAEC,iBAEF,IAAIC,IAAMC,EAAEC,IAAIC,QAAU,kDAAoDL,EAAEM,OAAOC,KAAO,SAAWd,WAGnGe,MAAMN,IAAK,CAACO,OAAQ,SAASC,MAAMC,WAC9BA,SAASC,GAOZC,SAASC,SANTC,sBAAaC,gBAAgB,CACzBC,SAAS,EAAAC,iBAAU,sBAAuB,qBAC1CC,KAAM,UAML,OACb,GACH,CAACC,MAAM,IAIZ,MAAMC,gBAAkBzB,SAASC,cAAclB,kBAAkBG,cAC5C,OAAjBa,cACF0B,gBAAgBvB,iBAAiB,SAASC,UACpCC,EAAEC,iBAEF,MAAMU,eAAiBH,MAAML,EAAEC,IAAIC,QAAU,kDACvCiB,gBAAkBX,SAASY,OAEjC,IAAIrB,IAAM,GACNb,QAAUiC,UAAUE,4BACtBtB,IAAMC,EAAEC,IAAIC,QAAU,4DAA8Db,OAAS,SAAWC,KACxG,cAAgBH,UAAY,aAAeJ,SAAW,cAAgBD,UACtEwC,OAAOZ,SAASa,QAAQxB,MAEfb,QAAUiC,UAAUK,+BAAiCtC,QAAUiC,UAAUM,4BAClF1B,IAAMC,EAAEC,IAAIC,QAAU,4DAA8Db,OAAS,SAAWC,KACxG,YAAcH,UAAY,YAAcJ,SAAW,cAAgBD,UAAY,SAAWG,YAC1FqC,OAAOZ,SAASa,QAAQxB,MAEfb,QAAUiC,UAAUO,2BAC7B3B,IAAMC,EAAEC,IAAIC,QAAU,mEAAqEb,OAAS,SACpGC,KAAO,YAAcH,UAAY,YAAcJ,SAAW,cAAgBD,UAAY,SAAWG,YACjGqC,OAAOZ,SAASa,QAAQxB,MAEfb,QAAUiC,UAAUQ,4BAC7B5B,IAAMC,EAAEC,IAAIC,QAAU,6EAA+Eb,OACrG,OAASC,KAAO,WAAaR,UAC7BwC,OAAOZ,SAASa,QAAQxB,MAGxBa,sBAAaC,gBAAgB,CACzBC,SAAS,EAAAC,iBAAU,iBAAkB,qBACrCC,KAAM,YAGf,CAACC,MAAM,IAKZxB,SAASE,iBAAiB,SAAUE,IAC1BA,EAAEM,OAAOyB,QAAQpD,kBAAkBC,iBACrCoB,EAAEC,mBAEP,CAACmB,MAAM,GAAM,EAMlB1B,CAAuBT,UAAWC,SAAUC,EAAWC,YAAc,EAAGC,OAAQC,UAAWC,EAAiBC,OAAQC,KAAK,CAEzH"}