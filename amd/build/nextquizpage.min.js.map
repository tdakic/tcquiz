{"version":3,"file":"nextquizpage.min.js","sources":["../src/nextquizpage.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Used by the teacher to go to the next quiz question or display the final report_final_results - i.e.\n * handles the teacher clicking the next button even when question solutions are being displayed\n *\n * @module     quizaccess_tcquiz\n * @copyright  2024 Capilano University\n * @author     Tamara Dakic <tdakic@capilanou.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nconst Selectors = {\n    actions: {\n        nextquestionButtonR: '[data-action=\"quizaccess_tcquiz/next-question_in_review_button\"]',\n    },\n\n};\n\nconst registerEventListeners = (sessionid, quizid, cmid, attemptid, page) => {\n\n  const nextQuestionAction = document.querySelector(Selectors.actions.nextquestionButtonR);\n  nextQuestionAction.addEventListener('click', async(e) => {\n          e.preventDefault();\n          // The page of the quiz attempt that will be displayed is detrmined by quizdatateacher.php.\n          // This is left here for possible error checking additions later\n          page++;\n\n          var result = await fetch(M.cfg.wwwroot\n            + '/mod/quiz/accessrule/tcquiz/quizdatateacher.php?requesttype=getquestion&quizid='\n            + quizid + '&cmid=' + cmid + '&attempt=' + attemptid\n            + '&sessionid=' + sessionid + '&rejoin=0&page=' + page + '&sesskey=' + M.cfg.sesskey, {method: 'POST'});\n\n          var responseXMLText = await result.text();\n\n          await parseNextURL(responseXMLText);\n\n      }, {once: true});\n};\n\n\n/**\n * Helper function to replace the current page with the attempt page specified in the responseXMLText\n * @param {string} responseXMLText\n */\nfunction parseNextURL(responseXMLText) {\n\n  var parser = new DOMParser();\n  var responseXML = parser.parseFromString(responseXMLText, 'text/html');\n\n  var quizresponse = responseXML.getElementsByTagName('tcquiz').item(0);\n\n  var nextURL = quizresponse.getElementsByTagName('url').item(0).textContent;\n\n  window.location.replace(nextURL);\n\n}\n\nexport const init = (sessionid, quizid, cmid, attemptid, page) => {\n\n  registerEventListeners(sessionid, quizid, cmid, attemptid, page);\n};\n"],"names":["Selectors","nextquestionButtonR","registerEventListeners","sessionid","quizid","cmid","attemptid","page","document","querySelector","addEventListener","async","e","preventDefault","result","fetch","M","cfg","wwwroot","sesskey","method","responseXMLText","text","responseXML","DOMParser","parseFromString","nextURL","getElementsByTagName","item","textContent","window","location","replace","parseNextURL","once","_exports","init"],"mappings":";;;;;;;;;;AAwBA,MAAMA,kBACO,CACLC,oBAAqB,oEAKvBC,uBAAyBA,CAACC,UAAWC,OAAQC,KAAMC,UAAWC,QAEvCC,SAASC,cAAcT,kBAAkBC,qBACjDS,iBAAiB,SAASC,UACrCC,EAAEC,iBAGFN,OAEA,IAAIO,aAAeC,MAAMC,EAAEC,IAAIC,QAC3B,kFACAd,OAAS,SAAWC,KAAO,YAAcC,UACzC,cAAgBH,UAAY,kBAAoBI,KAAO,YAAcS,EAAEC,IAAIE,QAAS,CAACC,OAAQ,SAE7FC,sBAAwBP,OAAOQ,aAY7C,SAAsBD,iBAEpB,IACIE,aADS,IAAIC,WACQC,gBAAgBJ,gBAAiB,aAItDK,QAFeH,YAAYI,qBAAqB,UAAUC,KAAK,GAExCD,qBAAqB,OAAOC,KAAK,GAAGC,YAE/DC,OAAOC,SAASC,QAAQN,SAnBVO,CAAaZ,gBAAgB,GAEpC,CAACa,MAAM,GAAM,EAwBpBC,SAAAC,KAHkBA,CAACjC,UAAWC,OAAQC,KAAMC,UAAWC,QAEvDL,uBAAuBC,UAAWC,OAAQC,KAAMC,UAAWC,KAAK,CAChE"}