define("quizaccess_tcquiz/teachercontrols",["exports","core/notification","core/str"],(function(_exports,_notification,_str){var obj;
/**
   * Allows the teacher to control the polling of one question.
   * Currently, the teacher can only stop the question.
   *
   * @module     quizaccess_tcquiz
   * @copyright  2024 Capilano University
   * @author     Tamara Dakic <tdakic@capilanou.ca>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_notification=(obj=_notification)&&obj.__esModule?obj:{default:obj};const Selectors={actions:{endquestionButton:'[data-action="quizaccess_tcquiz/end-question_button"]'},regions:{numAnswers:'[data-region="quizaccess_tcquiz/numberanswers_span"]',timeLeft:'[data-region="quizaccess_tcquiz/timeleft_span"]'}},registerEventListeners=(sessionid,quizid,cmid,attemptid,page,timeForQuestion,teacherTimer,POLLING_INTERVAL)=>{window.addEventListener("beforeunload",(function(event){event.stopImmediatePropagation()}));var timeLeftHTML=document.querySelector(Selectors.regions.timeLeft);const endQuestionAction=document.querySelector(Selectors.actions.endquestionButton);teacherTimer.onmessage=function(event){timeLeftHTML.innerHTML=event.data,0==event.data&&(endQuestionAction.disabled=!0,timeLeftHTML.innerHTML=0,clearInterval(updateNumAnswersEvent),updateNumAnswersEvent=null,teacherTimer.terminate(),document.getElementById("responseform").submit())},endQuestionAction.addEventListener("click",(async e=>{e.preventDefault(),endQuestionAction.disabled=!0,clearInterval(updateNumAnswersEvent),updateNumAnswersEvent=null,timeLeftHTML.innerHTML=0,teacherTimer.terminate();const req=new XMLHttpRequest;req.open("POST",M.cfg.wwwroot+"/mod/quiz/accessrule/tcquiz/change_question_state.php?sessionid="+sessionid+"&cmid="+cmid+"&sesskey="+M.cfg.sesskey),req.send(),req.onload=()=>{document.getElementById("responseform").submit()}}),{once:!0});var updateNumAnswersEvent=setInterval((async()=>{await async function(sessionid,quizid,cmid,attemptid){var result=await fetch(M.cfg.wwwroot+"/mod/quiz/accessrule/tcquiz/quizdatateacher.php?requesttype=getnumberanswers&quizid="+quizid+"&sessionid="+sessionid+"&cmid="+cmid+"&attempt="+attemptid+"&sesskey="+M.cfg.sesskey,{method:"POST"}),responseXMLText=await result.text();await function(responseXMLText){var responseXML=(new DOMParser).parseFromString(responseXMLText,"text/html"),numberOfAnswers=responseXML.getElementsByTagName("tcquiz").item(0).getElementsByTagName("numanswers").item(0).textContent;document.querySelector(Selectors.regions.numAnswers).innerHTML=numberOfAnswers}(responseXMLText)}(sessionid,quizid,cmid,attemptid)}),POLLING_INTERVAL)};_exports.init=(sessionid,quizid,cmid,attemptid,page,timeForQuestion,POLLING_INTERVAL)=>{var teacherTimer=new Worker("./timer.js");const URL_Q_TIME=M.cfg.wwwroot+"/mod/quiz/accessrule/tcquiz/get_question_time_left.php?quizid="+quizid+"&sessionid="+sessionid+"&cmid="+cmid+"&attempt="+attemptid+"&sesskey="+M.cfg.sesskey;fetch(URL_Q_TIME,{method:"POST"}).then((response=>{if(!response.ok)throw new Error((0,_str.get_string)("questiontimeretriveerror","quizaccess_tcquiz"));return response.text()})).then((text=>(teacherTimer.postMessage({timeForQuestion:Math.max(0,text)}),text))).catch((error=>{teacherTimer.postMessage({timeForQuestion:timeForQuestion}),_notification.default.addNotification({message:error,type:"error"})})),registerEventListeners(sessionid,quizid,cmid,attemptid,0,0,teacherTimer,POLLING_INTERVAL)}}));

//# sourceMappingURL=teachercontrols.min.js.map