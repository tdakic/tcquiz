{"version":3,"file":"getquizpage.min.js","sources":["../src/getquizpage.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Go to the current quiz page. Used in the tcq_review_page (for student)\n * in tcquiz renderer.\n *\n * @module     quizaccess_tcquiz\n * @copyright  2024 Capilano University\n * @author     Tamara Dakic <tdakic@capilanou.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\nimport Notification from 'core/notification';\n\n\nconst registerEventListeners = (sessionid, quizid, cmid, attemptid, page, POLLING_INTERVAL) => {\n\n  window.goToCurrentQuizPageEvent = setInterval(async() => {\n      await goToCurrentQuizPage(sessionid, quizid, cmid, attemptid, page);\n  }, POLLING_INTERVAL);\n};\n\n/**\n * Go to the next page of the quiz.\n * @param {sessionid} sessionid The id of the current session.\n * @param {quizid} quizid The quizid of the current quiz.\n * @param {cmid} cmid Course module id of the current quiz.\n * @param {attemptid} attemptid The attemptid of the teacher's attempt.\n * @param {page} page The current quiz page\n */\nasync function goToCurrentQuizPage(sessionid, quizid, cmid, attemptid, page) {\n\n  var result = await fetch(M.cfg.wwwroot + '/mod/quiz/accessrule/tcquiz/quizdatastudent.php?quizid='\n    + quizid + '&sessionid=' + sessionid + '&cmid=' + cmid + '&attempt=' + attemptid\n    + '&sesskey=' + M.cfg.sesskey + '&page=' + page, {method: 'POST'});\n\n  var responseXMLText = await result.text();\n\n  await updateQuizPage(responseXMLText);\n\n}\n\n/**\n * Helper function to parse a response from the server and go to the specified url.\n * same function is in waitforquestion.js - leave for now in case more events added\n * @param {string} responseXMLText The XML returned by quizdatastudent.php\n */\nfunction updateQuizPage(responseXMLText) {\n\n  const parser = new DOMParser();\n  const responseXML = parser.parseFromString(responseXMLText, 'text/html');\n\n  var quizresponse = responseXML.getElementsByTagName('tcquiz').item(0);\n\n  // ERROR handling?\n\n  if (quizresponse === null) {\n    Notification.addNotification({\n        message: getString('invalidserverresponse', 'quizaccess_tcquiz'),\n        type: 'error'\n    });\n    return;\n\n  } else {\n\n    var quizstatus = quizresponse.getElementsByTagName('status').item(0).textContent;\n\n    if (quizstatus == 'showquestion') {\n\n        window.goToCurrentQuizPageEvent = null;\n        clearInterval(window.goToCurrentQuizPageEvent);\n        var attemptURL = quizresponse.getElementsByTagName('url').item(0).textContent;\n        window.location.replace(attemptURL);\n\n    } else if (quizstatus == 'showresults') {\n        // You should be on this page, so do nothing\n    } else if (quizstatus == 'finalresults') {\n\n      window.goToCurrentQuizPageEvent = null;\n      clearInterval(window.goToCurrentQuizPageEvent);\n      var finalURL = quizresponse.getElementsByTagName('url').item(0).textContent;\n      window.location.replace(finalURL);\n\n    } else if (quizstatus == 'quiznotrunning' || quizstatus == 'waitforquestion' || quizstatus == 'waitforresults' ||\n            quizstatus == 'noaction') {\n            // Keep trying\n\n    } else if (quizstatus == 'error') {\n      var errmsg = quizresponse.getElementsByTagName('message').item(0).textContent;\n\n      Notification.addNotification({\n          message: errmsg,\n          type: 'error'\n      });\n\n    } else {\n      Notification.addNotification({\n          message: getString('unknownserverresponse', 'quizaccess_tcquiz') + quizstatus,\n          type: 'error'\n      });\n    }\n  }\n\n}\n\n\nexport const init = (sessionid, quizid, cmid, attemptid, page, POLLING_INTERVAL) => {\n  registerEventListeners(sessionid, quizid, cmid, attemptid, page, POLLING_INTERVAL);\n};\n"],"names":["obj","_notification","__esModule","default","registerEventListeners","sessionid","quizid","cmid","attemptid","page","POLLING_INTERVAL","window","goToCurrentQuizPageEvent","setInterval","async","result","fetch","M","cfg","wwwroot","sesskey","method","responseXMLText","text","responseXML","DOMParser","parseFromString","quizresponse","getElementsByTagName","item","Notification","addNotification","message","getString","type","quizstatus","textContent","clearInterval","attemptURL","location","replace","finalURL","errmsg","updateQuizPage","goToCurrentQuizPage","_exports","init"],"mappings":"yHA0B6C,IAAAA;;;;;;;;;kFAA7CC,eAA6CD,IAA7CC,gBAA6CD,IAAAE,WAAAF,KAAAG,QAAAH,KAG7C,MAAMI,uBAAyBA,CAACC,UAAWC,OAAQC,KAAMC,UAAWC,KAAMC,oBAExEC,OAAOC,yBAA2BC,aAAYC,gBAahDA,eAAmCT,UAAWC,OAAQC,KAAMC,UAAWC,MAErE,IAAIM,aAAeC,MAAMC,EAAEC,IAAIC,QAAU,0DACrCb,OAAS,cAAgBD,UAAY,SAAWE,KAAO,YAAcC,UACrE,YAAcS,EAAEC,IAAIE,QAAU,SAAWX,KAAM,CAACY,OAAQ,SAExDC,sBAAwBP,OAAOQ,aAWrC,SAAwBD,iBAEtB,MACME,aADS,IAAIC,WACQC,gBAAgBJ,gBAAiB,aAE5D,IAAIK,aAAeH,YAAYI,qBAAqB,UAAUC,KAAK,GAInE,GAAqB,OAAjBF,aAKF,YAJAG,sBAAaC,gBAAgB,CACzBC,SAAS,EAAAC,iBAAU,wBAAyB,qBAC5CC,KAAM,UAMV,IAAIC,WAAaR,aAAaC,qBAAqB,UAAUC,KAAK,GAAGO,YAErE,GAAkB,gBAAdD,WAA8B,CAE9BxB,OAAOC,yBAA2B,KAClCyB,cAAc1B,OAAOC,0BACrB,IAAI0B,WAAaX,aAAaC,qBAAqB,OAAOC,KAAK,GAAGO,YAClEzB,OAAO4B,SAASC,QAAQF,iBAErB,GAAkB,eAAdH,iBAEJ,GAAkB,gBAAdA,WAA8B,CAEvCxB,OAAOC,yBAA2B,KAClCyB,cAAc1B,OAAOC,0BACrB,IAAI6B,SAAWd,aAAaC,qBAAqB,OAAOC,KAAK,GAAGO,YAChEzB,OAAO4B,SAASC,QAAQC,eAEnB,GAAkB,kBAAdN,YAAgD,mBAAdA,YAAiD,kBAAdA,YAC1D,YAAdA,iBAGD,GAAkB,SAAdA,WAAuB,CAChC,IAAIO,OAASf,aAAaC,qBAAqB,WAAWC,KAAK,GAAGO,YAElEN,sBAAaC,gBAAgB,CACzBC,QAASU,OACTR,KAAM,eAIVJ,sBAAaC,gBAAgB,CACzBC,SAAS,EAAAC,iBAAU,wBAAyB,qBAAuBE,WACnED,KAAM,UA5DRS,CAAerB,iBApBXsB,CAAoBvC,UAAWC,OAAQC,KAAMC,UAAWC,KAAK,GACpEC,iBAAiB,EAyFpBmC,SAAAC,KAFkBA,CAACzC,UAAWC,OAAQC,KAAMC,UAAWC,KAAMC,oBAC7DN,uBAAuBC,UAAWC,OAAQC,KAAMC,UAAWC,KAAMC,iBAAiB,CAClF"}