{"version":3,"file":"teachercontrols.min.js","sources":["../src/teachercontrols.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Allows the teacher to control the polling of one question.\n * Currently, the teacher can only stop the question.\n *\n * @module     quizaccess_tcquiz\n * @copyright  2024 Capilano University\n * @author     Tamara Dakic <tdakic@capilanou.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst Selectors = {\n    actions: {\n        endquestionButton: '[data-action=\"quizaccess_tcquiz/end-question_button\"]',\n        // For upadating teacher controls later: nextquestionButton: '[data-action=\"quizaccess_tcquiz/next-question_button\"]',\n    },\n    regions: {\n        numAnswers: '[data-region=\"quizaccess_tcquiz/numberanswers_span\"]',\n        timeLeft: '[data-region=\"quizaccess_tcquiz/timeleft_span\"]',\n },\n};\n\nconst registerEventListeners = (sessionid, quizid, cmid, attemptid, page, timeForQuestion, POLLING_INTERVAL) => {\n\n/*  Left here to use when a better teacher controls are added\ndocument.addEventListener('click', async(e) => {\n        if (e.target.closest(Selectors.actions.nextquestionButton)) {\n          e.preventDefault();\n          page++;\n          clearInterval(updateNumAnswersEvent);\n          updateNumAnswersEvent = null;\n          document.querySelector(Selectors.regions.timeLeft).innerHTML = 0; //will this stop setInterval?\n\n          var  result = await fetch(M.cfg.wwwroot+'/mod/quiz/accessrule/tcquiz/quizdatateacher.php?requesttype=getquestion&quizid='\n            +quizid+'&joincode='+joincode+'&cmid='+ cmid +'&attempt='+attemptid\n          +'&sessionid='+sessionid+'&rejoin=false&page='+page+'&sesskey='+ M.cfg.sesskey,{method: 'POST'});\n\n          var responseXMLText = await result.text();\n          await  parse_next_url(responseXMLText);\n\n        }\n  },{once: true} );\n*/\n\n  // This should prevent \"Unsaved changes\" pop-up which might happen if the teacher interacts with the\n  // question and then clicks on the End question button.\n  window.addEventListener('beforeunload', function(event) {\n    event.stopImmediatePropagation();\n  });\n\n  // Handles teacher clicking on the End question button\n  const endQuestionAction = document.querySelector(Selectors.actions.endquestionButton);\n  endQuestionAction.addEventListener('click', async(e) => {\n            e.preventDefault();\n            clearInterval(updateNumAnswersEvent);\n            updateNumAnswersEvent = null;\n\n            document.querySelector(Selectors.regions.timeLeft).innerHTML = 0; // Will this stop setInterval?\n            clearInterval(timer);\n            timer = null;\n            const req = new XMLHttpRequest();\n            req.open(\"POST\", M.cfg.wwwroot +\n              '/mod/quiz/accessrule/tcquiz/change_question_state.php?sessionid=' + sessionid + '&cmid=' + cmid +\n              '&sesskey=' + M.cfg.sesskey);\n            req.send();\n\n            req.onload = () => {\n              document.getElementById('responseform').submit();\n            };\n    }, {once: true});\n\n    var updateNumAnswersEvent = setInterval(async() => {\n      await updateNumberOfAnswers(sessionid, quizid, cmid, attemptid);\n    }, POLLING_INTERVAL);\n\n    var timeLeft = timeForQuestion; // +1 to wait for everyone?\n\n    // Teacher timer\n    var timer = setInterval(function() {\n        var timeLeftHTML = document.querySelector(Selectors.regions.timeLeft);\n        timeLeft--;\n        timeLeftHTML.innerHTML = timeLeft;\n\n        if (timeLeft <= 0) {\n          clearInterval(timer);\n          timer = null;\n          clearInterval(updateNumAnswersEvent);\n          updateNumAnswersEvent = null;\n          timeLeftHTML.innerHTML = 0;\n          document.getElementById('responseform').submit();\n        }\n    }, 1000);\n\n};\n\n/**\n * Retrieves and updates the number of received student answers\n * @param {sessionid} sessionid The id of the current session.\n * @param {quizid} quizid The quizid of the current quiz.\n * @param {cmid} cmid Course module id of the current quiz.\n * @param {attemptid} attemptid The attemptid of the teacher's attempt.\n */\nasync function updateNumberOfAnswers(sessionid, quizid, cmid, attemptid) {\n\n  var result = await fetch(M.cfg.wwwroot + '/mod/quiz/accessrule/tcquiz/quizdatateacher.php?requesttype=getnumberanswers&quizid='\n    + quizid + '&sessionid=' + sessionid + '&cmid=' + cmid + '&attempt=' + attemptid\n    + '&sesskey=' + M.cfg.sesskey, {method: 'POST'});\n\n  var responseXMLText = await result.text();\n\n  await updateNumAnswersHtml(responseXMLText);\n\n}\n\n/**\n * Helper function to update the html with number of submitted answers\n * @param {string} responseXMLText\n */\nfunction updateNumAnswersHtml(responseXMLText) {\n\n  var parser = new DOMParser();\n  var responseXML = parser.parseFromString(responseXMLText, 'text/html');\n\n  var quizresponse = responseXML.getElementsByTagName('tcquiz').item(0);\n\n  var numberOfAnswers = quizresponse.getElementsByTagName('numanswers').item(0).textContent;\n  document.querySelector(Selectors.regions.numAnswers).innerHTML = numberOfAnswers;\n}\n\n/**\n * Helper function to replace the current page with the attempt page specified in the responseXMLText\n * @param {string} responseXMLText\n */\n/* For when the teacher controls are improved function parse_next_url(responseXMLText){\n\n  var parser = new DOMParser();\n  var responseXML = parser.parseFromString(responseXMLText, 'text/html');\n\n  var quizresponse = responseXML.getElementsByTagName('tcquiz').item(0);\n  var next_url = quizresponse.getElementsByTagName('url').item(0).textContent;\n\n  window.location.replace(next_url);\n\n}*/\n\nexport const init = (sessionid, quizid, cmid, attemptid, page, timeForQuestion, POLLING_INTERVAL) => {\n\n  registerEventListeners(sessionid, quizid, cmid, attemptid, page, timeForQuestion, POLLING_INTERVAL);\n};\n"],"names":["Selectors","actions","endquestionButton","regions","numAnswers","timeLeft","registerEventListeners","sessionid","quizid","cmid","attemptid","page","timeForQuestion","POLLING_INTERVAL","window","addEventListener","event","stopImmediatePropagation","document","querySelector","async","e","preventDefault","clearInterval","updateNumAnswersEvent","innerHTML","timer","req","XMLHttpRequest","open","M","cfg","wwwroot","sesskey","send","onload","getElementById","submit","once","setInterval","result","fetch","method","responseXMLText","text","responseXML","DOMParser","parseFromString","numberOfAnswers","getElementsByTagName","item","textContent","updateNumAnswersHtml","updateNumberOfAnswers","timeLeftHTML","_exports","init"],"mappings":";;;;;;;;;;AAyBA,MAAMA,UAAY,CACdC,QAAS,CACLC,kBAAmB,yDAGvBC,QAAS,CACLC,WAAY,uDACZC,SAAU,oDAIZC,uBAAyBA,CAACC,UAAWC,OAAQC,KAAMC,UAAWC,KAAMC,gBAAiBC,oBAwBzFC,OAAOC,iBAAiB,gBAAgB,SAASC,OAC/CA,MAAMC,8BAIkBC,SAASC,cAAcnB,UAAUC,QAAQC,mBACjDa,iBAAiB,SAASK,UAClCC,EAAEC,iBACFC,cAAcC,uBACdA,sBAAwB,KAExBN,SAASC,cAAcnB,UAAUG,QAAQE,UAAUoB,UAAY,EAC/DF,cAAcG,OACdA,MAAQ,KACR,MAAMC,IAAM,IAAIC,eAChBD,IAAIE,KAAK,OAAQC,EAAEC,IAAIC,QACrB,mEAAqEzB,UAAY,SAAWE,KAC5F,YAAcqB,EAAEC,IAAIE,SACtBN,IAAIO,OAEJP,IAAIQ,OAAS,KACXjB,SAASkB,eAAe,gBAAgBC,QAAQ,CACjD,GACN,CAACC,MAAM,IAEV,IAAId,sBAAwBe,aAAYnB,gBA+B5CA,eAAqCb,UAAWC,OAAQC,KAAMC,WAE5D,IAAI8B,aAAeC,MAAMX,EAAEC,IAAIC,QAAU,uFACrCxB,OAAS,cAAgBD,UAAY,SAAWE,KAAO,YAAcC,UACrE,YAAcoB,EAAEC,IAAIE,QAAS,CAACS,OAAQ,SAEtCC,sBAAwBH,OAAOI,aAUrC,SAA8BD,iBAE5B,IACIE,aADS,IAAIC,WACQC,gBAAgBJ,gBAAiB,aAItDK,gBAFeH,YAAYI,qBAAqB,UAAUC,KAAK,GAEhCD,qBAAqB,cAAcC,KAAK,GAAGC,YAC9EjC,SAASC,cAAcnB,UAAUG,QAAQC,YAAYqB,UAAYuB,gBAhB3DI,CAAqBT,iBAtCjBU,CAAsB9C,UAAWC,OAAQC,KAAMC,UAAU,GAC9DG,kBAECR,SAAWO,gBAGXc,MAAQa,aAAY,WACpB,IAAIe,aAAepC,SAASC,cAAcnB,UAAUG,QAAQE,UAC5DA,WACAiD,aAAa7B,UAAYpB,SAErBA,UAAY,IACdkB,cAAcG,OACdA,MAAQ,KACRH,cAAcC,uBACdA,sBAAwB,KACxB8B,aAAa7B,UAAY,EACzBP,SAASkB,eAAe,gBAAgBC,YAE3C,IAAK,EAyDVkB,SAAAC,KAHkBA,CAACjD,UAAWC,OAAQC,KAAMC,UAAWC,KAAMC,gBAAiBC,oBAE9EP,uBAAuBC,UAAWC,OAAQC,KAAMC,UAAWC,EAAMC,gBAAiBC,iBAAiB,CACnG"}